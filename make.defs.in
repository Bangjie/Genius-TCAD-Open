@SET_MAKE@

include $(PETSC_DIR)/@PETSCBMAKEVAR@

GENIUS_DIR  = @GENIUS_DIR@

SYSTEM         = @SYSTEM@

# compiler
CC             = @CC@
CXX            = @CXX@
FC             = @FC@
LINK           = @CXX@
AR             = @AR@
STRIP          = @STRIP@
LDFLAGS        = @LDFLAGS@
DLLFLAG        = @DLLFLAG@
CXXSHAREDFLAG  = @CXXSHAREDFLAG@

# on Unix like system, create dynamic library
ifneq ($(SYSTEM),CYGWIN)
  CFLAGS        += $(DLLFLAG)
  CXXFLAGS      += $(DLLFLAG)
endif


#
# Define the right lib-extension for shared libraries
static_libext := .a
shared_libext := .so
obj-suffix := .o


# for cygwin system with VC/Intel cc, use /LD flag as DLL builder
# and set lib post fix as .lib
ifeq ($(SYSTEM),CYGWIN)
  CXXSHAREDFLAG := -LD
  static_libext := .lib
endif

# Figure out the compilation mode based on the
# environment variable METHOD.
opt-mode   := off
debug-mode := off
prof-mode  := off
syn-mode   := off
devel-mode := off

enable-vtk           = @enablevtk@
enable-visit         = @enablevisit@

#
# If the user has no environment variable
# called METHOD, he gets debug mode.
ifeq (x$(METHOD),x)
  METHOD := opt
endif

#
# If METHOD=opt, compile in optimized mode.
ifeq ($(METHOD),opt)
  opt-mode := on
  mode     := "optimized"
endif

#
# If METHOD=devel, compile in development mode.
ifeq ($(METHOD),devel)
  devel-mode := on
  mode       := "development"
endif

#
# If METHOD=dbg, compile in debug mode.
ifeq ($(METHOD),dbg)
  debug-mode := on
  mode       := "debug"
endif

#
# If METHOD=prof, compile in profiling mode
ifeq ($(METHOD),pro)
  prof-mode     := on
  mode          := "profiling"
  enable-shared := no
endif

###############################################################################
# Compiler flags, different for optimized, debug, and profiler modes.
ifeq ($(opt-mode),on)
  CXXFLAGS += @CXXFLAGS_OPT@
  CFLAGS   += @CFLAGS_OPT@
endif


ifeq ($(devel-mode),on)
  CXXFLAGS += @CXXFLAGS_DVL@
  CFLAGS   += @CFLAGS_DVL@
endif


ifeq ($(debug-mode),on)
  CXXFLAGS += -DDEBUG @CXXFLAGS_DBG@
  CFLAGS   += -DDEBUG @CFLAGS_DBG@
endif


ifeq ($(prof-mode),on)
  CXXFLAGS += @CXXFLAGS_OPT@ @PROFILING_FLAGS@
  CFLAGS   += @CFLAGS_OPT@ @PROFILING_FLAGS@
endif

# for cygwin system with VC/Intel cc, use /EHsc flag
ifeq ($(SYSTEM),CYGWIN)
  CXXFLAGS += -EHsc
endif

# lex and yacc
YACC     = @YACC@
LEX      = @LEX@
LEXLIB   = @LEXLIB@

# executable file extention
EXE     = @EXEEXT@

# CGNS head file and library
CGNSDIR = @CGNSDIR@
CGNSINC = -I$(CGNSDIR)/include
CGNSLIB = -L$(CGNSDIR)/lib -lcgns


GENIUS_INCLUDE   =  -I$(GENIUS_DIR)                   \
         -I$(GENIUS_DIR)/include/base                 \
         -I$(GENIUS_DIR)/include/enums                \
         -I$(GENIUS_DIR)/include/geom                 \
         -I$(GENIUS_DIR)/include/fe                   \
         -I$(GENIUS_DIR)/include/interpolation        \
         -I$(GENIUS_DIR)/include/quadrature           \
         -I$(GENIUS_DIR)/include/math                 \
         -I$(GENIUS_DIR)/include/mesh                 \
         -I$(GENIUS_DIR)/include/meshgen              \
         -I$(GENIUS_DIR)/include/parser               \
         -I$(GENIUS_DIR)/include/partition            \
         -I$(GENIUS_DIR)/include/solution             \
         -I$(GENIUS_DIR)/include/material             \
         -I$(GENIUS_DIR)/include/solver               \
         -I$(GENIUS_DIR)/include/source               \
         -I$(GENIUS_DIR)/include/hook                 \
         -I$(GENIUS_DIR)/include/utils                \
         -I$(GENIUS_DIR)/src/contrib/ann              \
         -I$(GENIUS_DIR)/src/contrib/ctri             \
         -I$(GENIUS_DIR)/src/contrib/csabathy         \
         -I$(GENIUS_DIR)/src/contrib/expreval         \
         -I$(GENIUS_DIR)/src/contrib/dfise            \
         -I$(GENIUS_DIR)/src/contrib/metis            \
         -I$(GENIUS_DIR)/src/contrib/mxml             \
         -I$(GENIUS_DIR)/src/contrib/qshep            \
         -I$(GENIUS_DIR)/src/contrib/silvaco          \
         -I$(GENIUS_DIR)/src/contrib/spice            \
         -I$(GENIUS_DIR)/src/contrib/spline           \
         -I$(GENIUS_DIR)/src/contrib/tif              \
         -I$(GENIUS_DIR)/src/contrib/triangle         \
         -I$(GENIUS_DIR)/src/contrib/tetgen           \
         $(CGNSINC)

ifeq ($(SYSTEM),CYGWIN)
  MATHLIB   :=
else
  MATHLIB   :=  -lm
endif


CLIBS     =  @LIBS@ $(MATHLIB) $(LEXLIB) $(CGNSLIB)
CLIBS    +=  -L$(GENIUS_DIR)/src/contrib/mxml -lmxml

# Link against the VTK APIs to read/write VTK files
  ifeq ($(enable-vtk),yes)
    CLIBS    += @VTK_LIBRARY@
    GENIUS_INCLUDE += @VTK_INCLUDE@
  endif

# Link against VISIT APIs to do real time display
  ifeq ($(enable-visit),yes)
    CLIBS    += -L$(VISIT)/libsim/V1/lib -lsim
    GENIUS_INCLUDE  += -I$(VISIT)/libsim/V1/include
  endif

# X11 system head file and library
enablex  = @enablex@
X11INCS  = @X11INCS@
X11LIBS  = @X11LIBS@
ifeq ($(enablex), yes)
  CLIBS    += $(X11LIBS)
  GENIUS_INCLUDE += $(X11INCS)
endif
